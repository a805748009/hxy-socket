mybatis.mapper-locations=classpath*:/xml/**.xml


# 数据库访问配置
# 主数据源，默认的
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://192.168.1.137:3306/human?useUnicode=true&characterEncoding=utf8&autoReconnect=true
spring.datasource.username=root
spring.datasource.password=root


# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=1000
# 合并多个DruidDataSource的监控数据
spring.datasource.useGlobalDataSourceStat=false
# 开启驼峰转换
mybatis.configuration.map-underscore-to-camel-case=true




##############################################   REDIS
redis.pool.maxActive=100
redis.pool.maxIdle=20
redis.pool.maxWait=3000
redis.pool.testOnBorrow=false
redis.pool.testOnReturn=false


redis.ip=192.168.1.137
redis.port=6379
redis.port1=6379
redis.password=rinzz94nb2018



##############################################   restful
server.port=7999
spring.application.name=service
eureka.client.serviceUrl.defaultZone=http://localhost:8888/eureka/








# ======================  SSL =================== #
# 是否开启SSL  默认false
nafos.isOpenSSL = false

# ssl密钥中.cert后缀文件路径
nafos.certFilePath = /Users/rinzz04/Downloads/214430462010536/214430462010536.pem

# ssl密钥中.key后缀文件路径
nafos.keyFilePath = /Users/rinzz04/Downloads/214430462010536/game.key


# ======================  端口号 =================== #

# 开启http的端口号 默认0不开启，>0自动开启
nafos.httpServerPort = 7999

# 开启socket的端口号 默认0不开启，>0自动开启
nafos.socketServerPort = 0


# ======================  心跳 =================== #

# socket中心跳的超时时间，秒为单位 默认：5
#nafos.readerIdleTime = 5


# ======================  zlib 数据压缩 =================== #

# 进应用的消息是否采用zlib解压 默认false。    （开启后，检测数据前4个字节，为1则解压）
#nafos.isZlibIn = false

# 应用发出的消息是否采用zlib压缩 默认false。    （开启后，满足zlibOutMinLength，则压缩，在数据前加4个字节1 ，不满足加0不压缩）
#nafos.isZlibOut = false


# 应用发出的消息超过多少个字节才使用zlib压缩 默认50。
#nafos.zlibOutMinLength = 50



# ======================  监控打印 =================== #

# 是否在日志中info级别 打印系统内存，CPU相关状况，每分钟一次
nafos.monnitor.showSystem = true



# ======================  监控打印 =================== #

# 是否对出去的数据进行CRC32校验数据 ，在数据前面4个字节描述校验的int 默认false
#nafos.isCrc32Out = false

# 是否对进来的数据进行CRC32校验数据 ，对数据前4个字节进行校验，校验不通过则丢弃不处理 默认false
#nafos.isCrc32In = false


# ======================  安全相关 =================== #
# 是否使用redis做二级用户session缓存
nafos.security.isUseRedis = true


# ALLVALIDATE 全部需要验证
# NOVALIDATE 全部不需要验证
nafos.security.isValidate = NOVALIDATE

# 安全模式相反的HttpUurlList  逗号隔开
nafos.security.oppositeHttpList =

# 安全模式相反的code  逗号隔开
#nafos.security.oppositeCodeList

# session过期时间，秒为单位 默认1800
#nafos.security.sessionTimeOut = 1800

# 不通过安全验证连接允许存活的时间，毫秒为单位 默认 300000
#nafos.security.channelUnSafeConnectTime =



